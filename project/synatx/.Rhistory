library(TSA)
library(dplyr)
library(ggplot2)
library(tseries) ## adf.test
library(MASS) ## boxcox
library(forecast)
library(lmtest)
dt <- read.csv("D:\\IPB\\5\\MPDW\\data\\dt_BPN_impute.csv")
head(dt)
names(dt) <- c("tanggal","penumpang")
dt$tanggal <- as.Date(dt$tanggal, format = "%Y-%m-%d")
summary(dt)
ggplot(dt, aes(x = tanggal, y = penumpang)) +
geom_line() +
labs(title = "Jumlah Penumpang Pesawat Berangkat dari Bandara BPN",
x = "Tanggal",
y = "Jumlah Penumpang") +
theme_minimal()+
geom_line(aes(y = mean(penumpang)),col="darkred")
acf(dt$penumpang, main = "ACF",lag.max=30)
pacf(dt$penumpang, main = "PACF",lag.max=30)
eacf(dt$penumpang)
adf.test(dt$penumpang)
index1 <- c(1:dim(dt)[1])
bc1 <- boxcox(penumpang~index1, data = dt)
lambda1 <- bc1$x[which.max(bc1$y)]
lambda1
bc1$x[bc1$y > max(bc1$y) - 1/2 * qchisq(0.95,1)] %>% min()
bc1$x[bc1$y > max(bc1$y) - 1/2 * qchisq(0.95,1)] %>% max()
dt.ts
dt.log <- log(dt)
dt.ts <- ts(dt$penumpang)
dt.ts.log <- log(dt.ts)
plot(dt.ts.lot)
plot(dt.ts.log)
par(mfrow=c(1,2))
plot(dt.ts)
plot(dt.ts.log)
bc.tf <- boxcox(penumpang~1, data = dt)
bc.tf$x[which.max(bc.tf$y)]
boxcox(dt.ts.log~index1)
boxcox(dt.ts.log~index1,lambda= seq(-2,5,0.1))
boxcox(dt.ts.log~index1,lambda= seq(-3,5,0.1))
adf.test(dt.ts.log)
acf(dt.ts.log, main = "ACF",lag.max=30)
pacf(dt.ts.log,main="PACF",lag.max=30)
dt.ts.log.diff <- diff(dt.ts.log)
plot(dt.ts.log.diff)
dt.ts.diff <- diff(dt.ts)
plot(dt.ts.diff)
boxcox(dt.ts.diff~index1,lambda= seq(-3,5,0.1))
index2 <- 1:dim(dt.ts.diff)[1]
index2 <- seq(1,dim(dt.ts.diff)[1])
dim(dt.ts.diff)[1]
index2 <- 1:len(dt.ts.diff)
index2 <- 1:length(dt.ts.diff)
boxcox(dt.ts.diff~index2,lambda= seq(-3,5,0.1))
plot(dt.ts.diff)
boxcox(dt.ts.diff+5000~index2,lambda= seq(-3,5,0.1))
boxcox(dt.ts.diff+7000~index2,lambda= seq(-3,5,0.1))
boxcox(dt.ts.diff+7000~index2,lambda= seq(0,2,0.1))
adf.test(dt.ts.diff)
acf(dt.ts.diff, main = "ACF",lag.max=30)
pacf(dt.ts.diff,main="PACF",lag.max=30)
library(readxl)
library(dplyr)
dt <- read_excel("D:\\IPB\\5\\TPG\\Tugas Presentasi\\2 data\\data-sosio-ekonomi.xlsx",sheet="jabar")
head(dt)
library(corrplot)
corrplot(cor(dt[,3:ncol(dt)]), method="number")
corrplot(cor(dt[,3:ncol(dt)]), method="circle",type="lower")
summary(dt)
library(ggplot2)
geom_boxplot(aes(y=TPT)
)
ggplot(dt)+
geom_boxplot(aes(y=TPT))
dt <- dt %>% select(-HLS)
summary(dt)
dt <- dt %>% dplyr::select(-HLS)
summary(dt)
names(dt)[3:ncol(dt)]
par(mfrow=c(2,3))
# Looping Box-Plot
type <- names(dt)[3:ncol(dt)]
for (i in type){
boxplot(data_cluster[,i],
main = paste("Variabel", i))
}
par(mfrow=c(2,3))
# Looping Box-Plot
type <- names(dt)[3:ncol(dt)]
for (i in type){
boxplot(dt[,i],
main = paste("Variabel", i))
}
par(mfrow=c(2,3))
# Looping Box-Plot
type <- names(dt)[3:ncol(dt)]
for (i in type){
boxplot(dt[,i],
main = paste(i))
}
dt.num <- dt[,3:ncol(dt)]
head(dt.num)
### scaling
dt.num <- scale(dt.num)
head(dt.num)
library(factoextra)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'wss',
k.max = 10)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'silhoutte',
k.max = 10)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'silhouette',
k.max = 10)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'gap_stat',
k.max = 10)
kmeans.hasil <- kmeans(dt.num, centers = 2, nstart = 25)
fviz_cluster(dt.num, kmeans.hasil)
fviz_cluster(data = dt.num, object = kmeans.hasil)
kmeans.hasil$centers
table(kmeans.hasil$cluster)
dt <- read_excel("D:\\IPB\\5\\TPG\\Tugas Presentasi\\2 data\\data-sosio-ekonomi.xlsx",sheet="jabar")
head(dt)
dt <- dt %>% dplyr::select(-HLS)
summary(dt)
par(mfrow=c(2,3))
# Looping Box-Plot
type <- names(dt)[3:ncol(dt)]
for (i in type){
boxplot(dt[,i],
main = paste(i))
}
corrplot(cor(dt[,3:ncol(dt)]), method="circle",type="lower")
dt.num <- dt[,3:ncol(dt)]
head(dt.num)
### scaling
dt.num <- scale(dt.num)
head(dt.num)
set.seed(31)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'wss',
k.max = 10)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'silhouette',
k.max = 10)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'gap_stat',
k.max = 10)
kmeans.hasil <- kmeans(dt.num, centers = 4, nstart = 25)
fviz_cluster(data = dt.num, object = kmeans.hasil)
kmeans.hasil$centers
table(kmeans.hasil$cluster)
dt$klasterKMeans <- kmeans.hasil$cluster
ggRadar(
data = dt,
mapping = aes(colours = klasterKmeans),
interactive = T
)
library(gridExtra) # Visualisasi karakteristik cluster
ggRadar(
data = dt,
mapping = aes(colours = klasterKmeans),
interactive = T
)
library(ggradar)
install.packages("ggradar")
### summary based on cluster mean
dt %>% group_by(klasterKMeans) %>% summarise_all(mean)
library(fpc)
kmedoids.hasil <- pam(x = dt.num, k = 4, metric = "euclidean", stand = FALSE)
library(cluster)
kmedoids.hasil <- pam(x = dt.num, k = 4, metric = "euclidean", stand = FALSE)
fviz_cluster(data = dt.num, object = kmedoids.hasil)
table(kmedoids.hasil$clustering)
dt$klasterKMedoids <- kmedoids.hasil$clustering
### summary based on cluster mean
dt %>% group_by(klasterKMedoids) %>% summarise_all(mean)
### summary based on cluster mean
dt %>% group_by(klasterKMedoids) %>% summarise_all(median)
### summary based on cluster mean
dt %>% group_by(klasterKMedoids) %>% summarise_all(mean)
devtools::install_github("ricardo-bion/ggradar",
dependencies = TRUE)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'wss',
k.max = 10)
library(ggradar)
fviz_cluster(data = dt.num, object = kmeans.hasil)
corrplot(cor(dt[,3:ncol(dt)]), method="circle",type="lower")
library(readxl)
library(dplyr)
library(corrplot)
library(ggplot2)
library(factoextra)
library(cluster)
library(ggradar)
dt <- read_excel("D:\\IPB\\5\\TPG\\Tugas Presentasi\\2 data\\data-sosio-ekonomi.xlsx",sheet="jabar")
head(dt)
dt <- dt %>% dplyr::select(-HLS)
summary(dt)
par(mfrow=c(2,3))
# Looping Box-Plot
type <- names(dt)[3:ncol(dt)]
for (i in type){
boxplot(dt[,i],
main = paste(i))
}
corrplot(cor(dt[,3:ncol(dt)]), method="circle",type="lower")
dt.num <- dt[,3:ncol(dt)]
head(dt.num)
### scaling
dt.num <- scale(dt.num)
head(dt.num)
set.seed(31)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'wss',
k.max = 10)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'silhouette',
k.max = 10)
fviz_nbclust(x = dt.num,
FUNcluster = kmeans,
method = 'gap_stat',
k.max = 10)
kmeans.hasil <- kmeans(dt.num, centers = 4, nstart = 25)
fviz_cluster(data = dt.num, object = kmeans.hasil)
kmeans.hasil$centers
table(kmeans.hasil$cluster)
dt.hasil <- dt
dt.hasil$klasterKMeans <- kmeans.hasil$cluster
dt.hasil$klasterKMeans <- as.factor(dt.hasil$klasterKMeans)
### summary based on cluster mean
dt %>% group_by(klasterKMeans) %>% summarise_if(is.numeric,mean)
### summary based on cluster mean
dt.hasil %>%
group_by(klasterKMeans) %>%
summarise_if(is.numeric,mean)
dt$KODE <- as.factor(dt$KODE)
dt.hasil <- dt
dt.hasil$klasterKMeans <- kmeans.hasil$cluster
dt.hasil$klasterKMeans <- as.factor(dt.hasil$klasterKMeans)
### summary based on cluster mean
dt.hasil %>%
group_by(klasterKMeans) %>%
summarise_if(is.numeric,mean)
kmedoids.hasil <- pam(x = dt.num, k = 4, metric = "euclidean", stand = FALSE)
fviz_cluster(data = dt.num, object = kmedoids.hasil)
table(kmedoids.hasil$clustering)
dt.hasil$klasterKMedoids <- kmedoids.hasil$clustering
dt.hasil$klasterKMedoids <- as.factor(dt.hasil$klasterKMedoids)
### summary based on cluster mean
dt.hasil %>%
group_by(klasterKMedoids) %>%
summarise_if(is.numeric,mean)
dt.hasil %>% select(`KABUPATEN/KOTA`,klasterKMeans,klasterKMedoids) %>% View()
dt.hasil %>% dplyr::select(`KABUPATEN/KOTA`,klasterKMeans,klasterKMedoids) %>% View()
dt.hasil1 <- dt.hasil %>%
mutate(klasterKMeans = case_when(klasterKMeans == 1 ~ 2,
klasterKMeans == 2 ~ 1,
klasterKMeans == 3 ~ 4,
klasterKMeans == 4 ~ 3))
dt.hasil1 %>% dplyr::select(`KABUPATEN/KOTA`,klasterKMeans,klasterKMedoids) %>% View()
write.csv(dt.hasil,"D:\\IPB\\5\\TPG\\Tugas Presentasi\\2 data\\hasil_klaster.csv")
kmeans.sum <- dt.hasil %>%
group_by(klasterKMeans) %>%
summarise_if(is.numeric,mean)
kmedoids.sum <- dt.hasil %>%
group_by(klasterKMedoids) %>%
summarise_if(is.numeric,mean)
kmeans.sum %>% as.tibble()
kmeans.sum %>% as_tibble()
kmeans.sum <- dt.hasil %>%
group_by(klasterKMeans) %>%
summarise_if(is.numeric,mean) %>%
as_tibble()
kmedoids.sum <- dt.hasil %>%
group_by(klasterKMedoids) %>%
summarise_if(is.numeric,mean) %>%
as_tibble()
ggradar(kmeans.sum)
kmeans.sum
kmeans.sum %>%
as_tibble(rownames = "klaster") %>%
mutate_at(vars(-klasterKMeans),rescale)
kmeans.sum %>%
as_tibble(rownames = "klaster") %>%
dplyr::mutate_at(vars(-klasterKMeans),rescale)
library(scales)
kmeans.sum %>%
as_tibble(rownames = "klaster") %>%
dplyr::mutate_at(vars(-klasterKMeans),rescale)
kmeans.sum %>%
as_tibble(rownames = "klaster")
kmeans.sum <- dt.hasil %>%
group_by(klasterKMeans) %>%
summarise_if(is.numeric,mean) %>%
select(-klasterKMeans)
kmeans.sum <- dt.hasil %>%
group_by(klasterKMeans) %>%
summarise_if(is.numeric,mean) %>%
dplyr::select(-klasterKMeans)
kmeans.sum %>%
as_tibble(rownames = "klaster")
kmeans.sum %>%
as_tibble(rownames = "klaster") %>%
mutate_at(vars(-klasterKMeans),rescale)
kmeans.sum %>%
as_tibble(rownames = "klaster") %>%
mutate_at(vars(-klaster),rescale)
kmeans.sum %>%
as_tibble(rownames = "klaster") %>%
mutate_at(vars(-klaster),rescale) %>%
ggradar()
kmedoids.sum <- dt.hasil %>%
group_by(klasterKMedoids) %>%
summarise_if(is.numeric,mean) %>%
dplyr::select(-klasterKMedoids)
kmedoids.sum %>%
as_tibble(rownames = "klaster") %>%
mutate_at(vars(-klaster),rescale) %>%
ggradar()
library(sf)
peta <- st_read("D:\\IPB\\5\\Regspas\\Peta\\idn_adm_bps_20200401_shp")
peta <- st_read("D:\\IPB\\5\\Regspas\\Peta\\idn_adm_bps_20200401_shp",layer="idn_admbnda_adm2_bps_20200401")
head(peta)
## merge
dt.hasil$KODEBPS <- paste("ID",dt.hasil$KODE,sep="")
dt.hasil$KODEBPS
dt.hasil.peta <- left_join(dt.hasil,peta,by=c("KODEBPS"="ADM2_PCODE")))
dt.hasil.peta <- left_join(dt.hasil,peta,by=c("KODEBPS"="ADM2_PCODE"))
## plot
ggplot(dt.hasil.peta)+
geom_sf(aes(fill=klasterKMedoids))+
scale_fill_manual(values = c("red","blue","green","yellow"))+
theme_minimal()+
labs(title = "Klaster Kabupaten Kota di Jawa Barat")
dt.hasil.peta <- st_as_sf(dt.hasil.peta)
dt.hasil.peta <- st_make_valid(dt.hasil.peta)
## plot
ggplot(dt.hasil.peta)+
geom_sf(aes(fill=klasterKMedoids))+
scale_fill_manual(values = c("red","blue","green","yellow"))+
theme_minimal()+
labs(title = "Klaster Kabupaten Kota di Jawa Barat")
## plot
ggplot(dt.hasil.peta)+
geom_sf(aes(fill=klasterKMedoids))+
scale_fill_manual(values = c("red","blue","green","yellow"))+
theme_minimal()+
labs(title = "Klaster Sosio Ekonomi Kabupaten Kota di Jawa Barat",
legend="Klaster K-Medoids")
## plot
ggplot(dt.hasil.peta)+
geom_sf(aes(fill=klasterKMedoids))+
scale_fill_manual(values = c("red","blue","green","yellow"))+
theme_minimal()+
labs(title = "Klaster Sosio Ekonomi Kabupaten Kota di Jawa Barat",
fill = "Klaster")
dt.hasil %>%
group_by(klasterKMedoids) %>%
summarise_if(is.numeric,mean)
kmedoids.sum %>%
as_tibble(rownames = "klaster") %>%
mutate_at(vars(-klaster),rescale) %>%
ggradar()
